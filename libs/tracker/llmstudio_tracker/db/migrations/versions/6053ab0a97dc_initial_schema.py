"""Initial schema

Revision ID: 6053ab0a97dc
Revises:
Create Date: 2025-05-05 11:27:42.586355

"""
from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "6053ab0a97dc"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "logs_default",
        sa.Column("log_id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("session_id", sa.String(), nullable=True),
        sa.Column("chat_input", sa.String(), nullable=True),
        sa.Column("chat_output", sa.String(), nullable=True),
        sa.Column("context", sa.JSON(), nullable=True),
        sa.Column("provider", sa.String(), nullable=True),
        sa.Column("model", sa.String(), nullable=True),
        sa.Column("deployment", sa.String(), nullable=True),
        sa.Column("parameters", sa.JSON(), nullable=True),
        sa.Column("metrics", sa.JSON(), nullable=True),
        sa.PrimaryKeyConstraint("log_id"),
    )
    with op.batch_alter_table("logs_default", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_logs_default_log_id"), ["log_id"], unique=False
        )

    op.create_table(
        "prompts",
        sa.Column("prompt_id", sa.String(), nullable=False),
        sa.Column("config", sa.JSON(), nullable=True),
        sa.Column("prompt", sa.String(), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("model", sa.String(), nullable=False),
        sa.Column("provider", sa.String(), nullable=False),
        sa.Column("version", sa.Integer(), nullable=False),
        sa.Column("label", sa.String(), nullable=True),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=True),
        sa.PrimaryKeyConstraint("prompt_id"),
        sa.UniqueConstraint(
            "name", "provider", "model", "version", name="uq_prompt_version"
        ),
    )
    op.create_table(
        "sessions",
        sa.Column("message_id", sa.Integer(), nullable=False),
        sa.Column("session_id", sa.String(), nullable=True),
        sa.Column("chat_history", sa.JSON(), nullable=True),
        sa.Column("extras", sa.JSON(), nullable=True),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=True),
        sa.PrimaryKeyConstraint("message_id"),
    )
    with op.batch_alter_table("sessions", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_sessions_message_id"), ["message_id"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_sessions_session_id"), ["session_id"], unique=False
        )

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("sessions", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_sessions_session_id"))
        batch_op.drop_index(batch_op.f("ix_sessions_message_id"))

    op.drop_table("sessions")
    op.drop_table("prompts")
    with op.batch_alter_table("logs_default", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_logs_default_log_id"))

    op.drop_table("logs_default")
    # ### end Alembic commands ###
